<!-- build_compile.xml

Description:
	This ANT script publishes installers and build artifacts to s:/build.
	
	To use this script, you must update properties is <project root>/scripts/build.properties or overide 
	them from commandline (using -D option). For example:
		
		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%
		ant -XX:MaxPermSize=512m -Dnlbuildroot=C:/depot/PolicyStudio/dev/BuildScript_1205 -Dexternal.dir=c:/depot/external -Dnlexternaldir=c:/depot/external -Dbuild_number=10001 -f scripts/build_publish.xml
		
	or
		
		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%
		set ANT_OPTS=-XX:MaxPermSize=512m -Dnlbuildroot=%NLBUILDROOT% -Dexternal.dir=%NLEXTERNALDIR% -Dnlexternaldir=%NLEXTERNALDIR% -Dbuild_number=10001 
		ant -f scripts/build_publish.xml -v	
-->
<project name="build_compile" default="all" basedir=".">

	<!-- Propery files -->
	<property file="${basedir}/build.properties" />
	<property environment="env" />
	
	<!-- Global properties -->
	<property name="xlib_dir" location="${nlbuildroot}/xlib" />
	<property name="xlib_jar_dir" location="${xlib_dir}/jar" />
	<property name="lib_dir" location="${nlbuildroot}/lib" />
	<property name="lib_jar_dir" location="${lib_dir}/jar" />
	<property name="build_dir" location="${nlbuildroot}/build" />
	<property name="classes_dir" value="${build_dir}/classes" />
	<property name="package_dir" value="${build_dir}/${package_name}" />
	<property name="dist_zip_file_name" value="${package_name}-${version_str}-${build_number}-base-${base_version}-${build_date_long}.zip" />
	<property name="java5.boot.classpath" value="${nlexternaldir}/j2sdk/jdk1.5.0_09/jre/lib/rt.jar" />
	
	<!-- Dump properties -->
	<echoproperties />

	<echo message="INFO: Dump properties completed" />
	
	<!-- Sanity checks -->
	<fail message="nlbuildroot is not set" unless="nlbuildroot" />
	<fail message="nlbuildroot is empty">
		<condition>
			<equals arg1="${nlbuildroot}" arg2="" trim="true" />
		</condition>
	</fail>
	<available file="${nlbuildroot}" type="dir" property="local.nlbuildroot_exists" />
	<fail message="nlbuildroot directory does not exist - ${nlbuildroot}" unless="local.nlbuildroot_exists" />

	<echo message="INFO: Sanity check completed (no error)" />
	
	<path id="compile.classpath">
		<fileset dir="${xlib_jar_dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<!-- Global tasks -->
	<tstamp>
		<format property="local.now" pattern="EEE, d MMM yyyy HH:mm:ss Z" />
	</tstamp>

	<echo message="version_str = ${version_str}" />
	<echo message="time = ${local.now}" />

	<!-- Targets -->
	<target name="all" description="Default for all" depends="compile, package" />
	<!--<target name="all" description="Default for all" depends="compile" />-->
	
	<!--<target name="clean" description="Delete all build artifacts" depends="">
		<delete includeemptydirs="true" dir="${build_dir}"/>
	</target>-->

    <target name="compile" description="Compile the project" depends="">
	
		<mkdir dir="${classes_dir}" />
		  
		<javac srcdir="${nlbuildroot}/src" destdir="${classes_dir}" verbose="true" source="1.5" target ="1.5" bootclasspath="${java5.boot.classpath}"> 
		<!--javac srcdir="${nlbuildroot}/src" destdir="${classes_dir}" verbose="true"--> 
			<classpath refid="compile.classpath"/>
			<include name="**/*.java" />
		</javac>		
        <jar destfile="${build_dir}/nextlabs-enovia-em-extension.jar" basedir="${classes_dir}" >
			<manifest>
				<attribute name="Java-Version" value="${java.version}"/>
				<attribute name="Implementation-Vendor" value="NextLabs, Inc."/>
				<attribute name="Implementation-Title" value="${product_name}"/>
				<attribute name="Implementation-Version" value="${version_str} (${build_number})"/>
				<attribute name="Implementation-Time" value="${local.now}"/>
			</manifest>
		</jar>
	</target>
	
	
	<target name="package" description="builds each plugin module">		
		<mkdir dir="${package_dir}" />
		<mkdir dir="${package_dir}/conf" />		
			
		<copy todir="${package_dir}" overwrite="true">
			<fileset file="${build_dir}/*.jar" />
			<fileset file="${nlbuildroot}/docs/readme.txt" />
		</copy>
							
		<copy todir="${package_dir}/conf" overwrite="true">
			<fileset dir="${nlbuildroot}/conf/">
			</fileset>
		</copy>
	
		<fixcrlf srcdir="${package_dir}/conf" includes="**/*.*" 
					eol="unix" eof="remove" />
	
		<zip destfile="${build_dir}/${dist_zip_file_name}" encoding="UTF-8"> 
			<fileset dir="${build_dir}"> 
				<include name="${package_name}/**" />
			</fileset>				
		</zip>
	
	</target>

</project>

